{
    "success": true,
    "message": "Transacci√≥n exitosa",
    "data": {
        "command": "020010",
        "responseCode": "00",
        "commerceCode": "tu_codigo_comercio",
        "terminalId": "tu_terminal_id",
        "rawResponse":"0200|000015000|TEST-002            |1|1<",
        "ticketNumber": "TEST-002",
        "authorizationCode": "588678",
        "amount": "000015000",
        "last4Digits": "8217",
        "operationNumber": "000974",
        "cardType": "CR",
        "date": "2025-04-15T20:54:03.308Z"
    }
}

Esta respuesta indica que la transacci√≥n fue exitosa (c√≥digo 00) y contiene todos los datos importantes que necesitas. Vamos a decodificarla:

üìã Estructura de la Respuesta:
Campo	Valor	Explicaci√≥n
success	true	Indica que la operaci√≥n fue exitosa
message	"Transacci√≥n exitosa"	Mensaje descriptivo
data	Objeto	Detalles completos de la transacci√≥n
üí≥ Datos Clave de la Transacci√≥n (dentro de data):
responseCode: "00"

C√≥digo de aprobaci√≥n (00 = exitoso, otros valores indican errores).

amount: "000015000"

Monto de la transacci√≥n formateado (equivale a $15,000).

ticketNumber: "TEST-002"

N√∫mero de boleta/ticket que enviaste.

authorizationCode: "588678"

C√≥digo √∫nico de autorizaci√≥n del banco (simulado en este caso).

last4Digits: "8217"

√öltimos 4 d√≠gitos de la tarjeta (simulados).

operationNumber: "000974"

N√∫mero interno de operaci√≥n asignado por el POS.

cardType: "CR"

Tipo de tarjeta: CR (cr√©dito), DB (d√©bito).

date: "2025-04-15T20:54:03.308Z"

Fecha y hora exacta de la transacci√≥n (en formato ISO).

üîç Campos T√©cnicos (para debugging):
Campo	Explicaci√≥n
command: "020010"	Comando enviado al POS (0200 = venta) + respuesta (10)
rawResponse	Mensaje crudo enviado por el POS (incluye caracteres de control como  STX y  ETX)
commerceCode	Identificador de tu comercio (configurado en .env)
terminalId	ID de tu terminal POS
‚úÖ ¬øQu√© Debes Hacer con Esta Respuesta?
Guardar en tu base de datos:

operationNumber, authorizationCode, y amount son cr√≠ticos para reconciliaciones.

Mostrar al usuario:

    // Ejemplo en frontend
    console.log(`Pago aprobado! 
    Monto: $${parseInt(response.data.amount)/100} 
    Autorizaci√≥n: ${response.data.authorizationCode}`);
    Validar en voucher:
    Los campos ticketNumber, last4Digits, y date deben coincidir con lo impreso.

‚ö†Ô∏è Notas Importantes:
Modo Simulaci√≥n:
Los datos como authorizationCode y last4Digits son generados aleatoriamente (no son reales).

Formato de Monto:
El monto viene en centavos sin punto decimal (000015000 = $15,000.00). Para convertirlo:

javascript
Copy
const montoReal = parseInt("000015000") / 100; // 15000
En Producci√≥n:
Cuando conectes el POS f√≠sico, estos ser√°n datos reales proporcionados por Transbank.

üìå Ejemplo de Flujo Completo:
Frontend ‚Üí Env√≠a {amount: 15000, ticketNumber: "TEST-002"}

Backend ‚Üí Procesa con el POS (f√≠sico o simulado)

POS ‚Üí Devuelve los datos de autorizaci√≥n

Backend ‚Üí Formatea la respuesta como recibiste

Frontend ‚Üí Muestra confirmaci√≥n al usuario.